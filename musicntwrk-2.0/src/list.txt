musicntwrk.py:import re
musicntwrk.py:import numpy as np
musicntwrk.py:import music21 as m21
musicntwrk.py:from functools import reduce
musicntwrk.py:import fractions as fr
musicntwrk.py:from math import gcd
musicntwrk.py:            from .networks.pcsDictionary import pcsDictionary
musicntwrk.py:            from .networks.rhythmDictionary import rhythmDictionary
musicntwrk.py:            from .networks.rhythmPDictionary import rhythmPDictionary
musicntwrk.py:            from .networks.scoreDictionary import scoreDictionary
musicntwrk.py:            from .networks.readScore import readScore
musicntwrk.py:            from .networks.orchestralVector import orchestralVector
musicntwrk.py:            from .networks.pcsNetwork import pcsNetwork
musicntwrk.py:            from .networks.pcsEgoNetwork import pcsEgoNetwork
musicntwrk.py:            from .networks.vLeadNetwork import vLeadNetwork
musicntwrk.py:            from .networks.vLeadNetworkVec import vLeadNetworkVec
musicntwrk.py:            from .networks.vLeadNetworkByName import vLeadNetworkByName
musicntwrk.py:            from .networks.vLeadNetworkByNameVec import vLeadNetworkByNameVec
musicntwrk.py:            from .networks.rhythmNetwork import rhythmNetwork
musicntwrk.py:            from .networks.rLeadNetwork import rLeadNetwork
musicntwrk.py:            from .networks.scoreNetwork import scoreNetwork
musicntwrk.py:            from .networks.scoreSubNetwork import scoreSubNetwork
musicntwrk.py:            from .networks.timbralNetwork import timbralNetwork
musicntwrk.py:            from .networks.orchestralNetwork import orchestralNetwork
musicntwrk.py:            from .timbre.computePSCC import computePSCC
musicntwrk.py:            from .timbre.computeStandardizedPSCC import computeStandardizedPSCC
musicntwrk.py:            from .timbre.computeMFCC import computeMFCC
musicntwrk.py:            from .timbre.computeStandardizedMFCC import computeStandardizedMFCC
musicntwrk.py:            from .timbre.computeASCBW import computeASCBW
musicntwrk.py:            from .timbre.computeModifiedASCBW import computeModifiedASCBW
musicntwrk.py:            from .harmony.tonalHarmonyCalculator import tonalHarmonyCalculator
musicntwrk.py:            from .harmony.tonnentz import tonnentz
musicntwrk.py:            from .harmony.tonalHarmonyModels import tonalHarmonyModels
data/MIDImap.py:import numpy as np
data/MIDImidi.py:import music21 as m21
data/MIDImidi.py:import numpy as np
data/MIDIscore.py:import music21 as m21
data/WRITEscore.py:import music21 as m21
data/WRITEscore.py:import pydub as pb
data/WRITEscore.py:import numpy as np
data/WRITEscoreNoTime.py:import music21 as m21
data/WRITEscoreNoTime.py:import numpy as np
data/WRITEscoreOps.py:import music21 as m21
data/WRITEscoreOps.py:import numpy as np
data/WRITEscoreOps.py:from ..utils.generalizedOpsName import generalizedOpsName
data/WRITEscoreOps.py:from ..utils.opsName import opsName
data/analyzeSound.py:import numpy as np
data/analyzeSound.py:import librosa
data/analyzeSound.py:import librosa.display
data/analyzeSound.py:import matplotlib.pyplot as plt
data/analyzeSound.py:import matplotlib.style as ms
data/analyzeSound.py:from ..musicntwrk import PCSet
data/analyzeSound.py:from ..musicntwrk import RHYTHMSeq
data/analyzeTimbre.py:import numpy as np
data/analyzeTimbre.py:import librosa
data/analyzeTimbre.py:import librosa.display
data/analyzeTimbre.py:import matplotlib.pyplot as plt
data/analyzeTimbre.py:import matplotlib.style as ms
data/analyzeTimbre.py:from ..musicntwrk import PCSet
data/analyzeTimbre.py:from ..musicntwrk import RHYTHMSeq
data/analyzeTimbre.py:from ..timbre.normSoundDecay import normSoundDecay
data/analyzeTimbre.py:from ..timbre.computeMFCC import computeMFCC
data/i_spectral.py:import sys,os,re
data/i_spectral.py:import numpy as np
data/i_spectral.py:# import CSound wrapper ctcsound (from csound installation directory)
data/i_spectral.py:import ctcsound
data/i_spectral2.py:import sys,os,re
data/i_spectral2.py:import numpy as np
data/i_spectral2.py:import scipy.fftpack as FFT
data/i_spectral2.py:# import CSound wrapper ctcsound (from csound installation directory)
data/i_spectral2.py:import ctcsound
data/i_spectral_pure.py:import sys,os,re
data/i_spectral_pure.py:import numpy as np
data/i_spectral_pure.py:from scipy.signal import convolve
data/i_spectral_pure.py:import scipy.fftpack as FFT
data/i_spectral_pure.py:import librosa
data/i_spectral_pyo.py:import sys,os,re
data/i_spectral_pyo.py:import numpy as np
data/i_spectral_pyo.py:import scipy.fftpack as FFT
data/i_spectral_pyo.py:import pyo as po
data/i_spectral_pyo.py:	import numpy as np
data/i_spectral_pyo.py:	import sys,os,re,time
data/i_spectral_pyo.py:	from sonifiPy import *
data/r_1Ddata.py:import numpy as np
data/scaleMapping.py:import numpy as np
harmony/applyOps.py:import re
harmony/applyOps.py:import numpy as np
harmony/applyOps.py:from ..musicntwrk import PCSet
harmony/applyOps.py:from ..utils.Remove import Remove
harmony/chinese_postman.py:import networkx as nx
harmony/chinese_postman.py:import itertools
harmony/getRN.py:import numpy as np
harmony/getRN.py:import music21 as m21
harmony/getRN.py:from ..musicntwrk import PCSet
harmony/getRN.py:from .enharmonicDictionary import enharmonicDictionary
harmony/lookupOps.py:import numpy as np
harmony/lookupProgr.py:import numpy as np
harmony/lookupWrapper.py:from .lookupOps import lookupOps
harmony/lookupWrapper.py:from .lookupProgr import lookupProgr
harmony/scoreAnalysis.py:import pickle
harmony/scoreAnalysis.py:import numpy as np
harmony/scoreAnalysis.py:import music21 as m21
harmony/scoreAnalysis.py:from ..musicntwrk import PCSet
harmony/scoreAnalysis.py:from .enharmonicDictionary import enharmonicDictionary
harmony/scoreAnalysis.py:from .shortHands import shortHands
harmony/scoreAnalysis.py:from ...utils.generalizedOpsName import generalizedOpsName
harmony/showAnalysis.py:import music21 as m21
harmony/showAnalysis.py:import numpy as np
harmony/showAnalysis.py:import pandas as pd
harmony/showAnalysis.py:from ..musicntwrk import PCSet
harmony/tonalHarmonyCalculator.py:import pickle,re
harmony/tonalHarmonyCalculator.py:import PySimpleGUI as sg
harmony/tonalHarmonyCalculator.py:import numpy as np
harmony/tonalHarmonyCalculator.py:import music21 as m21
harmony/tonalHarmonyCalculator.py:from .applyOps import applyOps
harmony/tonalHarmonyCalculator.py:from .lookupWrapper import lookupWrapper
harmony/tonalHarmonyCalculator.py:from ..utils.generalizedOpsName import generalizedOpsName
harmony/tonalHarmonyModels.py:from ..utils.generalizedOpsName import generalizedOpsName
harmony/tonalHarmonyModels.py:import music21 as m21
harmony/tonalHarmonyModels.py:import pickle, sys
harmony/tonalPartition.py:import numpy as np
harmony/tonalPartition.py:import pandas as pd
harmony/tonalPartition.py:import music21 as m21
harmony/tonalPartition.py:import communities as cm
harmony/tonnentz.py:import pandas as pd
ml_utils/checkRun.py:import matplotlib.pyplot as plt
ml_utils/checkRun.py:import matplotlib.style as ms
ml_utils/modelDump.py:import os, pickle
ml_utils/modelDump.py:import numpy as np
ml_utils/modelDump.py:import joblib as jlib
ml_utils/modelLoad.py:import pickle
ml_utils/modelLoad.py:import joblib as jlib
ml_utils/modelLoad.py:import tensorflow as tf
ml_utils/modelLoad.py:import numpy as np
ml_utils/multiModelPredictor.py:import numpy as np
ml_utils/multiModelPredictor.py:from .scaleDataSet import scaleDataSet
ml_utils/prepareDataSet.py:import numpy as np
ml_utils/prepareDataSet.py:from sklearn.model_selection import train_test_split
ml_utils/prepareDataSet.py:from sklearn.preprocessing import StandardScaler,MinMaxScaler,Normalizer
ml_utils/readModels.py:import os, glob, tarfile
ml_utils/readModels.py:from .modelLoad import modelLoad
ml_utils/scaleDataSet.py:import numpy as np
ml_utils/trainCNNmodel.py:import numpy as np
ml_utils/trainCNNmodel.py:from tensorflow.keras.models import Sequential,Model
ml_utils/trainCNNmodel.py:from tensorflow.keras.layers import Dense, Dropout, Flatten
ml_utils/trainCNNmodel.py:from tensorflow.keras.layers import Conv2D, MaxPooling2D
ml_utils/trainCNNmodel.py:from tensorflow.keras.layers import LeakyReLU
ml_utils/trainCNNmodel.py:from .modelDump import modelDump
ml_utils/trainCNNmodel.py:from .prepareDataSet import prepareDataSet
ml_utils/trainNNmodel.py:import numpy as np
ml_utils/trainNNmodel.py:import tensorflow as tf
ml_utils/trainNNmodel.py:from .modelDump import modelDump
ml_utils/trainNNmodel.py:from .prepareDataSet import prepareDataSet
networks/orchestralNetwork.py:import numpy as np
networks/orchestralNetwork.py:import pandas as pd
networks/orchestralNetwork.py:import networkx as nx
networks/orchestralNetwork.py:import community as cm
networks/orchestralNetwork.py:from ..utils.minimalDistance import minimalDistance
networks/orchestralNetwork.py:    â€¢    use orchestralScore() to import the score data as sequence
networks/orchestralVector.py:import music21 as m21
networks/orchestralVector.py:import numpy as np
networks/orchestralVector.py:from ..utils.init_list_of_objects import init_list_of_objects
networks/orchestralVectorColor.py:import numpy as np
networks/orchestralVectorColor.py:import pandas as pd
networks/orchestralVectorColor.py:import matplotlib.pyplot as plt
networks/pcsDictionary.py:import itertools as iter
networks/pcsDictionary.py:import pandas as pd
networks/pcsDictionary.py:from ..utils.communications import *
networks/pcsDictionary.py:from ..utils.load_balancing import *
networks/pcsDictionary.py:    from mpi4py import MPI
networks/pcsDictionary.py:from ..musicntwrk import PCSet
networks/pcsEgoNetwork.py:import sys,re,os
networks/pcsEgoNetwork.py:import pandas as pd
networks/pcsEgoNetwork.py:import numpy as np
networks/pcsEgoNetwork.py:import sklearn.metrics as sklm
networks/pcsEgoNetwork.py:from ..utils.communications import *
networks/pcsEgoNetwork.py:from ..utils.load_balancing import *
networks/pcsEgoNetwork.py:    from mpi4py import MPI
networks/pcsNetwork.py:import sys,re,os
networks/pcsNetwork.py:import pandas as pd
networks/pcsNetwork.py:import numpy as np
networks/pcsNetwork.py:from ..utils.communications import *
networks/pcsNetwork.py:from ..utils.load_balancing import *
networks/pcsNetwork.py:    from mpi4py import MPI
networks/rLeadNetwork.py:import time,re,os
networks/rLeadNetwork.py:import numpy as np
networks/rLeadNetwork.py:import fractions as fr
networks/rLeadNetwork.py:import pandas as pd
networks/rLeadNetwork.py:from ..musicntwrk import RHYTHMSeq
networks/rLeadNetwork.py:from ..utils.floatize import floatize
networks/rLeadNetwork.py:from ..utils.rhythmDistance import rhythmDistance
networks/readScore.py:import re,sys
networks/readScore.py:import numpy as np
networks/readScore.py:import music21 as m21
networks/rhythmDictionary.py:import sys
networks/rhythmDictionary.py:import itertools as itr
networks/rhythmDictionary.py:import numpy as np
networks/rhythmDictionary.py:import pandas as pd
networks/rhythmDictionary.py:from ..musicntwrk import RHYTHMSeq
networks/rhythmDictionary.py:from ..utils.communications import *
networks/rhythmDictionary.py:from ..utils.load_balancing import *
networks/rhythmNetwork.py:import time,re,os
networks/rhythmNetwork.py:import numpy as np
networks/rhythmNetwork.py:import itertools as iter
networks/rhythmNetwork.py:import pandas as pd
networks/rhythmNetwork.py:from ..utils.communications import *
networks/rhythmNetwork.py:from ..utils.load_balancing import *
networks/rhythmNetwork.py:    from mpi4py import MPI
networks/rhythmPDictionary.py:import sys
networks/rhythmPDictionary.py:import itertools as itr
networks/rhythmPDictionary.py:import numpy as np
networks/rhythmPDictionary.py:import pandas as pd
networks/rhythmPDictionary.py:from ..musicntwrk import RHYTHMSeq
networks/rhythmPDictionary.py:from ..utils.communications import *
networks/rhythmPDictionary.py:from ..utils.load_balancing import *
networks/rhythmPDictionary.py:from ..utils.Sublists import *
networks/rhythmPDictionary.py:from ..utils.Remove import *
networks/rhythmPDictionary.py:from ..utils.str2frac import *
networks/rhythmPDictionary.py:from ..utils.str2float import *
networks/scoreDictionary.py:import pandas as pd
networks/scoreDictionary.py:import numpy as np
networks/scoreDictionary.py:import music21 as m21
networks/scoreDictionary.py:from ..musicntwrk import PCSet
networks/scoreDictionary.py:from ..utils.Remove import *
networks/scoreDictionary.py:    â€¢	use readScore() to import the score data as sequence
networks/scoreNetwork.py:import pandas as pd
networks/scoreNetwork.py:import numpy as np
networks/scoreNetwork.py:import music21 as m21
networks/scoreNetwork.py:import networkx as nx
networks/scoreNetwork.py:import community as cm
networks/scoreNetwork.py:from ..musicntwrk import PCSet
networks/scoreNetwork.py:from ..utils.minimalDistance import minimalDistance
networks/scoreNetwork.py:from ..utils.minimalNoBijDistance import minimalNoBijDistance
networks/scoreNetwork.py:from ..utils.generalizedOpsName import generalizedOpsName
networks/scoreNetwork.py:    â€¢	use readScore() to import the score data as sequence
networks/scoreSubNetwork.py:import pandas as pd
networks/scoreSubNetwork.py:import numpy as np
networks/scoreSubNetwork.py:import music21 as m21
networks/scoreSubNetwork.py:import networkx as nx
networks/scoreSubNetwork.py:import community as cm
networks/scoreSubNetwork.py:from ..musicntwrk import PCSet
networks/scoreSubNetwork.py:from ..utils.minimalDistance import minimalDistance
networks/scoreSubNetwork.py:from ..utils.minimalNoBijDistance import minimalNoBijDistance
networks/scoreSubNetwork.py:from ..utils.generalizedOpsName import generalizedOpsName
networks/scoreSubNetwork.py:    â€¢	use readScore() to import the score data as sequence
networks/timbralNetwork.py:import sys,os
networks/timbralNetwork.py:import numpy as np
networks/timbralNetwork.py:import itertools as iter
networks/timbralNetwork.py:import pandas as pd
networks/timbralNetwork.py:from ..utils.communications import *
networks/timbralNetwork.py:from ..utils.load_balancing import *
networks/timbralNetwork.py:    from mpi4py import MPI
networks/vLeadNetwork.py:import time,re
networks/vLeadNetwork.py:import numpy as np
networks/vLeadNetwork.py:import itertools as iter
networks/vLeadNetwork.py:import pandas as pd
networks/vLeadNetwork.py:from ..utils.minimalDistance import minimalDistance
networks/vLeadNetworkByName.py:import time,re
networks/vLeadNetworkByName.py:import numpy as np
networks/vLeadNetworkByName.py:import itertools as iter
networks/vLeadNetworkByName.py:import pandas as pd
networks/vLeadNetworkByName.py:from ..utils.minimalDistance import minimalDistance
networks/vLeadNetworkByName.py:from ..utils.opsCheckByName import opsCheckByName
networks/vLeadNetworkByNameVec.py:import time,re
networks/vLeadNetworkByNameVec.py:import numpy as np
networks/vLeadNetworkByNameVec.py:import itertools as iter
networks/vLeadNetworkByNameVec.py:import pandas as pd
networks/vLeadNetworkByNameVec.py:from ..utils.minimalDistanceVec import minimalDistanceVec
networks/vLeadNetworkByNameVec.py:from ..utils.opsCheckByNameVec import opsCheckByNameVec
networks/vLeadNetworkVec.py:import time,re
networks/vLeadNetworkVec.py:import numpy as np
networks/vLeadNetworkVec.py:import itertools as iter
networks/vLeadNetworkVec.py:import pandas as pd
networks/vLeadNetworkVec.py:from ..utils.minimalDistanceVec import minimalDistanceVec
plotting/barplot.py:import numpy as np
plotting/barplot.py:import matplotlib.pyplot as plt
plotting/barplot.py:import matplotlib.style as ms
plotting/plotCC.py:import numpy as np
plotting/plotCC.py:import matplotlib.pyplot as plt
plotting/plotCC.py:import matplotlib.style as ms
plotting/plotCC.py:import librosa
plotting/plotCC.py:import librosa.display
plotting/plotOpsHistogram.py:import matplotlib.pyplot as plt
plotting/plotOpsHistogram.py:import matplotlib.style as ms
timbre/computeASCBW.py:import numpy as np
timbre/computeASCBW.py:import glob, os
timbre/computeASCBW.py:import librosa
timbre/computeASCBW.py:from .normSoundDecay import normSoundDecay
timbre/computeMFCC.py:import numpy as np
timbre/computeMFCC.py:import glob, os
timbre/computeMFCC.py:import librosa
timbre/computeModifiedASCBW.py:import numpy as np
timbre/computeModifiedASCBW.py:import glob, os
timbre/computeModifiedASCBW.py:import librosa
timbre/computeModifiedASCBW.py:import matplotlib.pyplot as plt
timbre/computeModifiedASCBW.py:import matplotlib.style as ms
timbre/computeModifiedASCBW.py:from .mfccSoundDecayPiecewise import mfccSoundDecayPiecewise
timbre/computeModifiedASCBW.py:from .minimizeBKPT import minimizeBKPT
timbre/computePSCC.py:import numpy as np
timbre/computePSCC.py:import glob,os
timbre/computePSCC.py:import librosa
timbre/computeStandardizedMFCC.py:import numpy as np
timbre/computeStandardizedMFCC.py:import glob, os
timbre/computeStandardizedMFCC.py:import librosa
timbre/computeStandardizedMFPS.py:import numpy as np
timbre/computeStandardizedMFPS.py:import glob,os
timbre/computeStandardizedMFPS.py:import librosa
timbre/computeStandardizedPSCC.py:import numpy as np
timbre/computeStandardizedPSCC.py:import glob, os
timbre/computeStandardizedPSCC.py:import librosa
timbre/mfccSoundDecayPiecewise.py:import numpy as np
timbre/mfccSoundDecayPiecewise.py:from ..utils.SegmentedLinearReg import SegmentedLinearReg
timbre/minimizeBKPT.py:import numpy as np
timbre/minimizeBKPT.py:from .mfccSoundDecayPiecewise import mfccSoundDecayPiecewise
timbre/normSoundDecay.py:import numpy as np
timbre/normSoundDecay.py:from scipy.signal import hilbert
timbre/normSoundDecay2.py:import numpy as np
timbre/normSoundDecay2.py:from scipy.signal import hilbert
utils/SegmentedLinearReg.py:import numpy as np
utils/SegmentedLinearReg.py:from numpy.linalg import lstsq
utils/SegmentedLinearReg.py:    import warnings
utils/Sublists.py:import itertools as itr
utils/communications.py:import numpy as np
utils/communications.py:import time
utils/communications.py:    from load_balancing import *
utils/communications.py:    from mpi4py import MPI
utils/generalizedOpsHistogram.py:import numpy as np
utils/generalizedOpsHistogram.py:from .opsDistance import opsDistance
utils/generalizedOpsName.py:from .opsNameFull import opsNameFull
utils/generalizedOpsName.py:from .minimalNoBijDistance import minimalNoBijDistance
utils/load_balancing.py:import numpy as np
utils/minimalDistance.py:import numpy as np
utils/minimalDistance.py:import sklearn.metrics as sklm
utils/minimalDistanceVec.py:import numpy as np
utils/minimalNoBijDistance.py:import itertools as iter
utils/minimalNoBijDistance.py:import numpy as np
utils/minimalNoBijDistance.py:from .minimalDistance import minimalDistance
utils/opsCheckByName.py:from .opsName import opsName
utils/opsCheckByNameVec.py:import numpy as np
utils/opsCheckByNameVec.py:from .opsNameVec import opsNameVec
utils/opsDistance.py:import numpy as np
utils/opsHistogram.py:import numpy as np
utils/opsHistogram.py:from .opsDistance import opsDistance
utils/opsName.py:import numpy as np
utils/opsNameFull.py:import numpy as np
utils/opsNameFull.py:from ..musicntwrk import PCSet
utils/opsNameVec.py:import numpy as np
utils/powerFit.py:import pylab
utils/powerFit.py:import numpy as np
utils/powerFit.py:import matplotlib.pyplot as plt
utils/powerFit.py:from matplotlib.font_manager import FontProperties
utils/powerFit.py:import powerlaw
utils/powerFit.py:    from matplotlib import rc
utils/rhythmDistance.py:import numpy as np
utils/rhythmDistance.py:import fractions as fr
utils/rhythmDistance.py:import sklearn.metrics as sklm
utils/scaleFreeFit.py:import collections
utils/scaleFreeFit.py:import numpy as np
utils/scaleFreeFit.py:from scipy.optimize import curve_fit
utils/str2float.py:import numpy as np
utils/str2float.py:import re
utils/str2frac.py:import fractions as fr
